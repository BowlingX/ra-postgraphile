// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`filters should filter by BigInt 1`] = `
Object {
  "id": Object {
    "equalTo": 5,
  },
}
`;

exports[`filters should filter by Int 1`] = `
Object {
  "id": Object {
    "equalTo": 5,
  },
}
`;

exports[`filters should filter by String 1`] = `
Object {
  "id": Object {
    "includes": "value",
  },
}
`;

exports[`filters should filter by UUID 1`] = `
Object {
  "id": Object {
    "equalTo": "02d07429-c2a7-4494-aec9-e8bde9176e86",
  },
}
`;

exports[`filters should filter by boolean 1`] = `
Object {
  "booleanField": Object {
    "equalTo": true,
  },
}
`;

exports[`filters should filter using a FilterSpec 1`] = `
Object {
  "id": Object {
    "likeInsensitive": "ilike value",
  },
}
`;

exports[`filters should filter with Full Text 1`] = `
Object {
  "id": Object {
    "matches": "test:*",
  },
}
`;

exports[`filters should support a value of undefined 1`] = `undefined`;

exports[`filters should support custom filters via objects 1`] = `
Object {
  "id": Object {
    "contains": Array [
      "a",
      "b",
    ],
  },
}
`;

exports[`filters should support custom filters with a value of undefined 1`] = `undefined`;

exports[`filters should throw an error if custom filter is not of type FilterSpec 1`] = `"Alternative {} filter is not of type FilterSpec"`;

exports[`filters should throw an error if custom filter is not of type FilterSpec 2`] = `"Alternative {\\"value\\":\\"foo\\"} filter is not of type FilterSpec"`;
